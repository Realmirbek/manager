from .models import Candidate, Mentor, ActionHistory
from .forms import CandidateForm, MentorForm
from django.shortcuts import render, get_object_or_404, redirect


def candidate_list(request):
    not_contacted = Candidate.objects.filter(status='thinking')
    contacted = Candidate.objects.filter(status='contacted')
    passed_test_candidates = Candidate.objects.filter(status='passed_test')


    return render(request, 'manager/candidate_list.html', {
        'not_contacted': not_contacted,
        'contacted': contacted,
        'passed_test_candidates': passed_test_candidates,

    })

def candidate_detail(request, candidate_id):
    candidate = get_object_or_404(Candidate, id=candidate_id)
    return render(request, 'manager/candidate_detail.html', {'candidate': candidate})


# üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞–∂–µ—Ä–∞
def add_candidate(request):
    if request.method == "POST":
        form = CandidateForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('candidate_list')
    else:
        form = CandidateForm()
    return render(request, 'manager/add_candidate.html', {'form': form})

# üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ–Ω—Ç–æ—Ä–∞
def add_mentor(request):
    if request.method == "POST":
        form = MentorForm(request.POST)
        if form.is_valid():
            try:
                form.save()
                return redirect('mentor_list')
            except IntegrityError as e:
                form.add_error(None, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
    else:
        form = MentorForm()
    return render(request, 'manager/add_mentor.html', {'form': form})

# üìå –û—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ —Å–≤—è–∑–∞–ª–∏—Å—å —Å–æ —Å—Ç–∞–∂–µ—Ä–æ–º
def mark_contacted(request, candidate_id):
    candidate = get_object_or_404(Candidate, id=candidate_id)
    candidate.status = 'contacted'
    candidate.save()

    ActionHistory.objects.create(
        action_type='candidate_contacted',
        candidate=candidate,
        details=f"–°—Ç–∞—Ç—É—Å —Å—Ç–∞–∂–µ—Ä–∞ {candidate.name} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '—Å–≤—è–∑–∞–ª–∏—Å—å'"
    )
    return redirect('candidate_list')

# üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—Ç–æ—Ä–∞ –¥–ª—è —Å—Ç–∞–∂–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, —Å –∫–µ–º —Å–≤—è–∑–∞–ª–∏—Å—å)

def mark_status(request, candidate_id, status):
    candidate = get_object_or_404(Candidate.objects.filter(is_deleted=False), id=candidate_id)
    candidate.status = "passed_test"
    candidate.save()

    ActionHistory.objects.create(
        action_type=f"candidate_test",
        candidate=candidate,
        details=f"–°—Ç–∞—Ç—É—Å —Å—Ç–∞–∂–µ—Ä–∞ {candidate.name} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '{status}'"
    )

    return redirect('candidate_list')


def assign_mentor(request, candidate_id):
    candidate = get_object_or_404(Candidate, id=candidate_id, status='contacted')
    mentors = Mentor.objects.all()

    if request.method == "POST":
        mentor_id = request.POST.get('mentor_id')
        if mentor_id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ mentor_id –≤–æ–æ–±—â–µ –ø—Ä–∏—à—ë–ª
            mentor = get_object_or_404(Mentor, id=mentor_id)
            candidate.mentor = mentor
            candidate.save()

            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            ActionHistory.objects.create(
                action_type='mentor_assigned',
                candidate=candidate,
                mentor=mentor,
                details=f"–ú–µ–Ω—Ç–æ—Ä {mentor.name} –±—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω —Å—Ç–∞–∂–µ—Ä—É {candidate.name}"
            )

            return redirect('candidate_list')
        else:
            return render(request, 'manager/assign_mentor.html', {
                'candidate': candidate,
                'mentors': mentors,
                'error': "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—Ç–æ—Ä–∞!",  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            })

    return render(request, 'manager/assign_mentor.html', {
        'candidate': candidate,
        'mentors': mentors
    })
# üìå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–∂–µ—Ä–∞
def edit_candidate(request, candidate_id):
    candidate = get_object_or_404(Candidate, id=candidate_id)
    if request.method == "POST":
        form = CandidateForm(request.POST, instance=candidate)
        if form.is_valid():
            form.save()
            return redirect('candidate_list')
    else:
        form = CandidateForm(instance=candidate)
    return render(request, 'manager/edit_candidate.html', {'form': form})

# üìå –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –º–µ–Ω—Ç–æ—Ä–æ–≤
def mentor_list(request):
    mentors = Mentor.objects.all()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –º–µ–Ω—Ç–æ—Ä–æ–≤
    return render(request, 'manager/mentor_list.html', {'mentors': mentors})

# üìå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω—Ç–æ—Ä–∞
def edit_mentor(request, mentor_id):
    mentor = get_object_or_404(Mentor, id=mentor_id)
    if request.method == "POST":
        form = MentorForm(request.POST, instance=mentor)
        if form.is_valid():
            form.save()
            return redirect('mentor_list')
    else:
        form = MentorForm(instance=mentor)
    return render(request, 'manager/edit_mentor.html', {'form': form})

# üìå –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç–∞–∂–µ—Ä–∞ –∏–ª–∏ –º–µ–Ω—Ç–æ—Ä–∞) –Ω–∞–≤—Å–µ–≥–¥–∞
def delete_forever(request, model_name, user_id):
    if model_name == "candidate":
        user = get_object_or_404(Candidate, id=user_id)
    elif model_name == "mentor":
        user = get_object_or_404(Mentor, id=user_id)
    else:
        return redirect('candidate_list')  # –ï—Å–ª–∏ –ø—Ä–∏—à–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ —Å–ø–∏—Å–æ–∫

    user.delete()  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–≤—Å–µ–≥–¥–∞
    return redirect('mentor_list' if model_name == "mentor" else 'candidate_list')  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ —Å–ø–∏—Å–æ–∫


def statistics_view(request):
    total_interns = Candidate.objects.count()  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–∂–µ—Ä–æ–≤
    interns_with_mentor = Candidate.objects.filter(mentor__isnull=False).count()  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–∂–µ—Ä–æ–≤ —Å –º–µ–Ω—Ç–æ—Ä–æ–º
    interns_without_mentor = total_interns - interns_with_mentor  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–∂–µ—Ä–æ–≤ –±–µ–∑ –º–µ–Ω—Ç–æ—Ä–∞

    return render(request, 'manager/statistics.html', {
        'total_interns': total_interns,
        'interns_with_mentor': interns_with_mentor,
        'interns_without_mentor': interns_without_mentor,
    })

# views.py
def action_history(request):
    history = ActionHistory.objects.all().order_by('-timestamp')  # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏, –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
    return render(request, 'manager/action_history.html', {
        'history': history
    })






